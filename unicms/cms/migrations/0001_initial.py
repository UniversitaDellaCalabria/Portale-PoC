# Generated by Django 3.1.2 on 2020-10-10 15:18

import cms.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('cms_context', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=160)),
                ('description', models.TextField(max_length=1024)),
                ('image', models.ImageField(blank=True, max_length=512, null=True, upload_to='images/categories')),
            ],
            options={
                'verbose_name_plural': 'Content Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ContextMediaCollection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=160)),
                ('description', models.TextField(max_length=1024)),
            ],
            options={
                'verbose_name_plural': 'Context Media Collections',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ContextPublication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField()),
                ('title', models.CharField(help_text='Heading, Headline', max_length=256)),
                ('subheading', models.TextField(blank=True, help_text='Strap line (press)', max_length=1024, null=True)),
                ('content', tinymce.models.HTMLField(blank=True, help_text='Content', null=True)),
                ('state', models.CharField(choices=[('draft', 'Draft'), ('wait', 'Wait for a revision'), ('published', 'Published')], default='draft', max_length=33)),
                ('date_start', models.DateTimeField(blank=True, null=True)),
                ('date_end', models.DateTimeField(blank=True, null=True)),
                ('note', models.TextField(blank=True, help_text='Editorial Board notes', null=True)),
                ('slug', models.SlugField(blank=True, null=True)),
                ('in_evidence_start', models.DateTimeField(blank=True, null=True)),
                ('in_evidence_end', models.DateTimeField(blank=True, null=True)),
                ('category', models.ManyToManyField(to='cms.Category')),
                ('context', models.ManyToManyField(limit_choices_to={'is_active': True}, to='cms_context.EditorialBoardContext')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pub_created_by', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pub_modified_by', to=settings.AUTH_USER_MODEL)),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name_plural': 'Context Pubblications',
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField()),
                ('name', models.CharField(max_length=160)),
                ('slug', models.SlugField(help_text='name-of-the-url-path', max_length=256)),
                ('note', models.TextField(blank=True, help_text='Editorial Board Notes, not visible by public.', null=True)),
                ('date_start', models.DateTimeField()),
                ('date_end', models.DateTimeField(blank=True, null=True)),
                ('state', models.CharField(choices=[('draft', 'Draft'), ('wait', 'Wait for a revision'), ('published', 'Published')], default='draft', max_length=33)),
            ],
            options={
                'verbose_name_plural': 'Pages',
            },
        ),
        migrations.CreateModel(
            name='PageBlock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('order', models.IntegerField(blank=True, default=10, null=True)),
                ('is_active', models.BooleanField()),
                ('name', models.CharField(blank=True, help_text='Specify the container section in the template where this block would be rendered.', max_length=60, null=True)),
                ('schema', models.TextField(choices=[('{}', 'heading'), ('{}', 'body')])),
                ('content', models.TextField(blank=True, help_text='according to the block template schema', null=True)),
                ('section', models.CharField(blank=True, choices=[('pre-head', 'Pre-Header'), ('head', 'Header'), ('menu', 'Navigation Menu'), ('menu-2', 'Navigation Menu 2'), ('menu-3', 'Navigation Menu 3'), ('slider', 'Carousel/Slider'), ('slider-2', 'Carousel/Slider 2'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('pre-footer', 'Pre-Footer'), ('footer', 'Footer')], help_text='Specify the container section in the template where this block would be rendered.', max_length=60, null=True)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.page')),
            ],
            options={
                'verbose_name_plural': 'Page Block',
            },
        ),
        migrations.CreateModel(
            name='PageTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField()),
                ('name', models.CharField(blank=True, max_length=160, null=True)),
                ('template_file', models.CharField(choices=[('/home/wert/DEV/Portale-PoC/unicms/cms_templates/pages/base.html', 'base.html')], max_length=1024)),
                ('note', models.TextField(blank=True, help_text='Editorial Board Notes, not visible by public.', null=True)),
            ],
            options={
                'verbose_name_plural': 'Page Templates',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PageThirdPartyBlock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('order', models.IntegerField(blank=True, default=10, null=True)),
                ('is_active', models.BooleanField()),
                ('section', models.CharField(blank=True, choices=[('pre-head', 'Pre-Header'), ('head', 'Header'), ('menu', 'Navigation Menu'), ('menu-2', 'Navigation Menu 2'), ('menu-3', 'Navigation Menu 3'), ('slider', 'Carousel/Slider'), ('slider-2', 'Carousel/Slider 2'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('pre-footer', 'Pre-Footer'), ('footer', 'Footer')], help_text='Specify the container section in the template where this block will be rendered.', max_length=60, null=True)),
                ('block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.pageblock')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.page')),
            ],
            options={
                'verbose_name_plural': 'Page Third-Party Block',
            },
        ),
        migrations.CreateModel(
            name='PageTemplateThirdPartyBlock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('order', models.IntegerField(blank=True, default=10, null=True)),
                ('is_active', models.BooleanField()),
                ('section', models.CharField(blank=True, choices=[('pre-head', 'Pre-Header'), ('head', 'Header'), ('menu', 'Navigation Menu'), ('menu-2', 'Navigation Menu 2'), ('menu-3', 'Navigation Menu 3'), ('slider', 'Carousel/Slider'), ('slider-2', 'Carousel/Slider 2'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('pre-footer', 'Pre-Footer'), ('footer', 'Footer')], help_text='Specify the container section in the template where this block would be rendered.', max_length=33, null=True)),
                ('block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.pageblock')),
                ('template', models.ForeignKey(limit_choices_to={'is_active': True}, on_delete=django.db.models.deletion.CASCADE, to='cms.pagetemplate')),
            ],
            options={
                'verbose_name_plural': 'Page Template Third-Party Blocks',
            },
        ),
        migrations.CreateModel(
            name='PageLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=256)),
                ('url', models.URLField(help_text='url')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.page')),
            ],
            options={
                'verbose_name_plural': 'Page Links',
            },
        ),
        migrations.CreateModel(
            name='PageBlockTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('order', models.IntegerField(blank=True, default=10, null=True)),
                ('is_active', models.BooleanField()),
                ('name', models.CharField(blank=True, help_text='Specify the container section in the template where this block would be rendered.', max_length=60, null=True)),
                ('schema', models.TextField(choices=[('{}', 'heading'), ('{}', 'body')])),
                ('content', models.TextField(blank=True, help_text='according to the block template schema', null=True)),
                ('section', models.CharField(blank=True, choices=[('pre-head', 'Pre-Header'), ('head', 'Header'), ('menu', 'Navigation Menu'), ('menu-2', 'Navigation Menu 2'), ('menu-3', 'Navigation Menu 3'), ('slider', 'Carousel/Slider'), ('slider-2', 'Carousel/Slider 2'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('pre-footer', 'Pre-Footer'), ('footer', 'Footer')], help_text='Specify the container section in the template where this block would be rendered.', max_length=60, null=True)),
                ('template_file', models.CharField(choices=[], default='base.html', max_length=1024)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.pagetemplate')),
            ],
            options={
                'verbose_name_plural': 'Page Block HTML Templates',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='page',
            name='base_template',
            field=models.ForeignKey(limit_choices_to={'is_active': True}, on_delete=django.db.models.deletion.CASCADE, to='cms.pagetemplate'),
        ),
        migrations.AddField(
            model_name='page',
            name='category',
            field=models.ManyToManyField(to='cms.Category'),
        ),
        migrations.AddField(
            model_name='page',
            name='context',
            field=models.ForeignKey(limit_choices_to={'is_active': True}, on_delete=django.db.models.deletion.CASCADE, to='cms_context.editorialboardcontext'),
        ),
        migrations.AddField(
            model_name='page',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='page',
            name='modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modified_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='page',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.CreateModel(
            name='ContextPublicationLocalization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField()),
                ('language', models.CharField(choices=[('af', 'Afrikaans'), ('ar', 'Arabic'), ('ar-dz', 'Algerian Arabic'), ('ast', 'Asturian'), ('az', 'Azerbaijani'), ('bg', 'Bulgarian'), ('be', 'Belarusian'), ('bn', 'Bengali'), ('br', 'Breton'), ('bs', 'Bosnian'), ('ca', 'Catalan'), ('cs', 'Czech'), ('cy', 'Welsh'), ('da', 'Danish'), ('de', 'German'), ('dsb', 'Lower Sorbian'), ('el', 'Greek'), ('en', 'English'), ('en-au', 'Australian English'), ('en-gb', 'British English'), ('eo', 'Esperanto'), ('es', 'Spanish'), ('es-ar', 'Argentinian Spanish'), ('es-co', 'Colombian Spanish'), ('es-mx', 'Mexican Spanish'), ('es-ni', 'Nicaraguan Spanish'), ('es-ve', 'Venezuelan Spanish'), ('et', 'Estonian'), ('eu', 'Basque'), ('fa', 'Persian'), ('fi', 'Finnish'), ('fr', 'French'), ('fy', 'Frisian'), ('ga', 'Irish'), ('gd', 'Scottish Gaelic'), ('gl', 'Galician'), ('he', 'Hebrew'), ('hi', 'Hindi'), ('hr', 'Croatian'), ('hsb', 'Upper Sorbian'), ('hu', 'Hungarian'), ('hy', 'Armenian'), ('ia', 'Interlingua'), ('id', 'Indonesian'), ('ig', 'Igbo'), ('io', 'Ido'), ('is', 'Icelandic'), ('it', 'Italian'), ('ja', 'Japanese'), ('ka', 'Georgian'), ('kab', 'Kabyle'), ('kk', 'Kazakh'), ('km', 'Khmer'), ('kn', 'Kannada'), ('ko', 'Korean'), ('ky', 'Kyrgyz'), ('lb', 'Luxembourgish'), ('lt', 'Lithuanian'), ('lv', 'Latvian'), ('mk', 'Macedonian'), ('ml', 'Malayalam'), ('mn', 'Mongolian'), ('mr', 'Marathi'), ('my', 'Burmese'), ('nb', 'Norwegian Bokmål'), ('ne', 'Nepali'), ('nl', 'Dutch'), ('nn', 'Norwegian Nynorsk'), ('os', 'Ossetic'), ('pa', 'Punjabi'), ('pl', 'Polish'), ('pt', 'Portuguese'), ('pt-br', 'Brazilian Portuguese'), ('ro', 'Romanian'), ('ru', 'Russian'), ('sk', 'Slovak'), ('sl', 'Slovenian'), ('sq', 'Albanian'), ('sr', 'Serbian'), ('sr-latn', 'Serbian Latin'), ('sv', 'Swedish'), ('sw', 'Swahili'), ('ta', 'Tamil'), ('te', 'Telugu'), ('tg', 'Tajik'), ('th', 'Thai'), ('tk', 'Turkmen'), ('tr', 'Turkish'), ('tt', 'Tatar'), ('udm', 'Udmurt'), ('uk', 'Ukrainian'), ('ur', 'Urdu'), ('uz', 'Uzbek'), ('vi', 'Vietnamese'), ('zh-hans', 'Simplified Chinese'), ('zh-hant', 'Traditional Chinese')], default='en', max_length=12)),
                ('subheading', models.TextField(blank=True, help_text='Strap line (press)', max_length=1024, null=True)),
                ('content', tinymce.models.HTMLField(blank=True, help_text='Content', null=True)),
                ('context_publication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.contextpublication')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='publoc_created_by', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='publoc_modified_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Context Publication Localizations',
            },
        ),
        migrations.CreateModel(
            name='ContextPublicationAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('order', models.IntegerField(blank=True, default=10, null=True)),
                ('is_active', models.BooleanField()),
                ('name', models.CharField(blank=True, help_text='Specify the container section in the template where this block would be rendered.', max_length=60, null=True)),
                ('file', models.FileField(upload_to=cms.models.context_publication_attachment_path)),
                ('description', models.TextField()),
                ('file_size', models.IntegerField(blank=True, null=True)),
                ('file_format', models.CharField(blank=True, choices=[('text/plain', 'text/plain'), ('application/vnd.oasis.opendocument.text', 'application/vnd.oasis.opendocument.text'), ('application/msword', 'application/msword'), ('application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'), ('text/csv', 'text/csv'), ('application/json', 'application/json'), ('application/vnd.ms-excel', 'application/vnd.ms-excel'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'), ('application/vnd.oasis.opendocument.spreadsheet', 'application/vnd.oasis.opendocument.spreadsheet'), ('application/wps-office.xls', 'application/wps-office.xls'), ('image/jpeg', 'image/jpeg'), ('image/png', 'image/png'), ('image/gif', 'image/gif'), ('image/x-ms-bmp', 'image/x-ms-bmp'), ('application/pdf', 'application/pdf'), ('application/pkcs7-mime', 'application/pkcs7-mime')], max_length=256, null=True)),
                ('publication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='page_attachment', to='cms.contextpublication')),
            ],
            options={
                'verbose_name_plural': 'Publication Attachments',
            },
        ),
        migrations.CreateModel(
            name='ContextNavBarItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('order', models.IntegerField(blank=True, default=10, null=True)),
                ('is_active', models.BooleanField()),
                ('name', models.CharField(max_length=33)),
                ('url', models.URLField(blank=True, help_text='url', null=True)),
                ('section', models.CharField(blank=True, choices=[('pre-head', 'Pre-Header'), ('head', 'Header'), ('menu', 'Navigation Menu'), ('menu-2', 'Navigation Menu 2'), ('menu-3', 'Navigation Menu 3'), ('slider', 'Carousel/Slider'), ('slider-2', 'Carousel/Slider 2'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('pre-footer', 'Pre-Footer'), ('footer', 'Footer')], help_text='Specify the container section in the template where this menu will be rendered.', max_length=60, null=True)),
                ('context', models.ForeignKey(limit_choices_to={'is_active': True}, on_delete=django.db.models.deletion.CASCADE, to='cms_context.editorialboardcontext')),
                ('page', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cms.page')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='related_page', to='cms.contextnavbaritem')),
            ],
            options={
                'verbose_name_plural': 'Context Navigation Menu Items',
            },
        ),
        migrations.CreateModel(
            name='ContextMedia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, help_text='Specify the container section in the template where this block would be rendered.', max_length=60, null=True)),
                ('file', models.FileField(upload_to=cms.models.context_media_path)),
                ('description', models.TextField()),
                ('file_size', models.IntegerField(blank=True, null=True)),
                ('file_format', models.CharField(blank=True, choices=[('text/plain', 'text/plain'), ('application/vnd.oasis.opendocument.text', 'application/vnd.oasis.opendocument.text'), ('application/msword', 'application/msword'), ('application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'), ('text/csv', 'text/csv'), ('application/json', 'application/json'), ('application/vnd.ms-excel', 'application/vnd.ms-excel'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'), ('application/vnd.oasis.opendocument.spreadsheet', 'application/vnd.oasis.opendocument.spreadsheet'), ('application/wps-office.xls', 'application/wps-office.xls'), ('image/jpeg', 'image/jpeg'), ('image/png', 'image/png'), ('image/gif', 'image/gif'), ('image/x-ms-bmp', 'image/x-ms-bmp'), ('application/pdf', 'application/pdf'), ('application/pkcs7-mime', 'application/pkcs7-mime')], max_length=256, null=True)),
                ('collections', models.ManyToManyField(to='cms.ContextMediaCollection')),
                ('context', models.ForeignKey(limit_choices_to={'is_active': True}, on_delete=django.db.models.deletion.CASCADE, to='cms_context.editorialboardcontext')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='media_created_by', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='media_modified_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Context Media',
            },
        ),
        migrations.CreateModel(
            name='PageRelated',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('order', models.IntegerField(blank=True, default=10, null=True)),
                ('is_active', models.BooleanField()),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parent_page', to='cms.page')),
                ('related_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_page', to='cms.page')),
            ],
            options={
                'verbose_name_plural': 'Related Pages',
                'unique_together': {('page', 'related_page')},
            },
        ),
        migrations.CreateModel(
            name='ContextPublicationRelated',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('order', models.IntegerField(blank=True, default=10, null=True)),
                ('is_active', models.BooleanField()),
                ('publication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parent_page', to='cms.contextpublication')),
                ('related', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_page', to='cms.contextpublication')),
            ],
            options={
                'verbose_name_plural': 'Related Publications',
                'unique_together': {('publication', 'related')},
            },
        ),
    ]
